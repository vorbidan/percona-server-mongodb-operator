#!/bin/bash

set -o errexit
set -o xtrace

test_dir=$(realpath "$(dirname "$0")")
deploy_dir="$(realpath "$(dirname "$0")"/../../deploy)"
source ${test_dir}/../functions

main_ns="serviceless-main"
external_ns="serviceless-external"
operator_ns="serviceless-operator"
client_ns="serviceless-client"

## there is a magic undocumented env var, which forces the operator to run in 
## k8s-cluster-wide mode, with RBAC configured at Cluster level
OPERATOR_NS="$operator_ns"

function deploy_operator_cw() {
  desc "Start Operator in Cluster-Wide Mode"
  create_namespace $OPERATOR_NS
	deploy_operator
  kubectl_bin get deployment percona-server-mongodb-operator -n "$operator_ns" -oyaml |
    yq eval '
      ((.. | select(.[] == "WATCH_NAMESPACE")) |= .value="'${main_ns},${external_ns}'") |
      del(.spec.template.metadata.creationTimestamp)' - |
    kubectl_bin apply -n "$operator_ns" -f -
  
  sleep 2
	wait_pod "$(get_operator_pod)"
}

function deploy_client() {
  desc "Deploy Client pod"
  create_namespace "$client_ns"
  kubectl_bin config set-context "$(kubectl_bin config current-context)" --namespace="$client_ns"
  ## A bit of spaghetti here - $conf_dir is defined in functions
  kubectl_bin apply -f "$conf_dir/client.yml"
  kubectl_bin run network --image wbitt/network-multitool
}

function start_external_cluster() {
  desc "Start External Cluster in unmanaged mode"
  create_namespace "$external_ns"
  kubectl_bin config set-context "$(kubectl_bin config current-context)" --namespace="$external_ns"
  kubectl_bin apply -f "$test_dir/conf/secrets.yaml"
  apply_cluster "$test_dir/conf/external.yaml"

  sleep 2
  wait_for_running "serviceless-external-rs0" 1
  # wait_for_running "serviceless-external-cfg" 1
}

function start_main_cluster() {
  desc "Start Main Cluster"
  create_namespace "$main_ns"
  kubectl_bin config set-context "$(kubectl_bin config current-context)" --namespace="$main_ns"
  kubectl_bin apply -f "$test_dir/conf/secrets.yaml"
  apply_cluster "$test_dir/conf/main.yaml"

  sleep 2
  wait_for_running "serviceless-main-rs0" 1
  # wait_for_running "serviceless-main-cfg" 1
}

function cleanup() {
  destroy "$external_ns"
  destroy "$main_ns"
  destroy "$operator_ns"
}

function test_can_create_db_user() {
  kubectl_bin config set-context "$(kubectl_bin config current-context)" --namespace="$client_ns"

  run_mongos \
	  'db.createUser({user:"myApp",pwd:"myPass",roles:[{db:"myApp",role:"readWrite"}]})' \
	  "userAdmin:userAdmin123456@$main_ns-mongos.$main_ns"
}

function main() {
  deploy_operator_cw
  deploy_client
  start_main_cluster
  start_external_cluster
}

main
